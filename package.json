{
  "name": "debounce",
  "version": "1.0.0",
  "description": "Debounce can be used in scenarios like search where you do not want to fire request on every keystroke; instead you want to have a cooling period after which to send a request. Write a debounce function that takes in a required callback function, a required delay in milliseconds. Calling `debounce (callback, delay)` should return a new \"debounced\" version of the callback function, which takes in the same parameters as the callback, and which, when executed, should call the callback after `delay` milliseconds have passed since the last call to this debounced function. For example, repeatedly calling a debounced function which had a delay of 3000ms every second would never call the underlying callback function, because the delay of 3000ms would never elapse since the last call.",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/chi-an-yang/debounce.git"
  },
  "author": "chian",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/chi-an-yang/debounce/issues"
  },
  "homepage": "https://github.com/chi-an-yang/debounce#readme",
  "devDependencies": {
    "typescript": "^4.7.4"
  }
}
